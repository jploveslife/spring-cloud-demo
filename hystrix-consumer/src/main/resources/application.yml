spring:
  application:
    name:  hystrix-consumer

server:
  port : 7051

eureka:
  client:
    serviceUrl:
      defaultZone: http://peer1:9001/eureka/,http://peer2:9002/eureka/
  instance:
    #服务实例元数据，设置实例名，区分同一服务中不同实例的唯一标识
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
     #启用注册IP
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"

# Command 属性主要用来控制 HystrixCommand 命令的行为，它主要有下面5种不同类型的配置
#
# 1.execution 配置
#   execution 配置控制的是 HystrixCommand.run() 的执行
#
#   hystrix.command.default.execution.isolation.strategy
#   该属性用来设置 HystrixCommand.run() 执行的隔离策略      全局默认值： Thread
#   隔离策略分为 Thread   和   Semaphore
#   Thread ：  通过线程池隔离的策略。它在独立的线程上执行，并且它的并发限制受线程中线程数量的限制
#   Semaphore：通过信号量隔离的策略，它在调用线程上执行，并且它的并发限制受信号量计数的限制
#
#   hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds
#   该属性用来配置 HystrixCommand 执行的超时时间，单位毫秒         全局默认值：1000
#   当 HystrixCommand 执行时间超过该配置后，Hystrix 会将该执行命令标记为 TIMEOUT 并进入服务降级处理逻辑
#
#   hystrix.command.default.execution.timeout.enabled
#   该属性用来配置 HystrixCommand.run() 的执行是否启用超时时间      默认：true
#   如果设置成 false , execution.isolation.thread.timeoutInMilliseconds 配置将不起作用
#
#   hystrix.command.default.execution.isolation.thread.interrupOnTimeout
#   该属性用来配置当  HystrixCommand.run() 执行超时的时候是否要将它中断
#
#   hystrix.command.default.execution.isolation.thread.interrupOnCancel
#   该属性用来配置当  HystrixCommand.run() 执行取消的时候是否要将它中断
#
#   hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests
#   当 HystrixCommand 的隔离策略使用信号量的时候，该属性用来配置信号量的大小（并发请求数），当最大并发请求数达到该设置时，后续的请求将会被拒绝
#   默认：10
#
#
# 2. fallback 配置，熔断回调
#   下面的这些属性是用来控制  HystrixCommand.getFallback() 执行的，这些属性同时使用于线程池和信号量的隔离策略
#
#   hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests        默认：10
#   该属性用来设置从调用线程中允许 HystrixCommand.getFallback() 方法执行的最大并发请求数
#   当达到最大请求数时，后续的请求将会被拒绝和抛出异常，因为已经没有后续的 fallback 可以被调用了
#
#   hystrix.command.default.fallback.enabled        默认：true
#   该属性用来设置服务降级策略是否启用，
#   如果设置false,那么当请求失败或者拒绝发送时，将不会调用 HystrixCommand.getFallback() 来执行服务降级
#
#
# 3.circuitBreaker 配置, 熔断降级功能
#   该属性用来控制HystrixCircuitBreaker的行为
#
#   hystrix.command.default.circuitBreaker.enabled      默认：true
#   该属性用来确定当服务请求命令失败时，是否使用断路器来跟踪器健康指标和熔断请求
#
#   hystrix.command.default.circuitBreaker.requestVolumeThreshold     默认值： 20
#   该属性用来设置在滚动时间窗口中，断路器的最小请求数。
#   例如，默认该值为20的时候，如果滚动时间窗（默认为10秒）内收到了19个请求，即使这19个请求都失败了，熔断器也不会打开
#
#   hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds      默认值：5000
#   该属性用来设置当断路器打开之后的休眠时间窗。休眠时间窗结束之后，会将断路器设置为半开状态，
#   尝试熔断的请求命令，如果依然失败就将断路器继续设置为打开状态，如果成功则设置成关闭状态
#
#   hystrix.command.default.circuitBreaker.errorThresholdPercentage       默认：50
#   该属性用来设置断路器打开的错误百分比条件
#   例如：默认值为5000的情况下，标识在滚动时间窗中，在请求数量超过 circuitBreaker.requestVolumeThreshold 阀值的前提下，如果错误请求数的百分比超过50
#   就把断路器设置为打开状态，否则就设置为关闭状态
#
#   hystrix.command.default.circuitBreaker.forceOpen      默认：fasle
#   如果将该属性设置为 true ,断路器将强行进入 打开 状态，它会拒绝所有请求，该属性优先于 circuitBreaker.forceClosed 属性
#
#   hystrix.command.default.circuitBreaker.forceClosed      默认：fasle
#   如果将该属性设置为 true ,断路器将强行进入 关闭 状态，它会接受所有请求，
#   如果 circuitBreaker.forceOpen 为 true，该属性不生效
#
#
# 4.metrics 配置
#   下面的属性均与 HystrixCommand 和 HystrixObservableCommand 执行中捕获的指标信息有关
#
#   hystrix.command.default.metrics.rollingStats.timeInMilliseconds         默认：10000
#   改属性用来设置滚动时间窗的长度，单位毫秒。该时间用于断路器判断健康度时需要收集信息的持续时间。
#   断路器在收集指标信息的时候会根据设置的时间窗长度拆分成多个 桶 来累计各度量值，每个 桶 记录了一段时间内的采集指标。
#   例如，当采用默认值10000毫秒时，断路器默认将其拆成10个 桶（桶的数量也可通过 metrics.rollingStats.numBuckets 参数设置），
#   每个桶记录1000毫秒内的指标信息
#   注意：该属性从 Hystrix 1.4.12版本开始，只有在应用初始化的时候生效，通过动态刷新配置不会生效，
#         这样做是为了避免出现运行期监测数据丢失的情况
#
#   hystrix.command.default.metrics.rollingStats.numBuckets         默认：10
#   该属性用来设置滚动时间窗统计指标信息时划分 桶 的数量
#   注意：metrics.rollingStats.timeInMilliseconds 参数设置的值必须被 metrics.rollingStats.numBuckets 整除，不然抛异常。
#   该参数跟 metrics.rollingStats.timeInMilliseconds 一样，从 Hystrix 1.4.12版本开始，只有在应用初始化的时候生效，通过动态刷新配置不会生效
#
#   hystrix.command.default.metrics.rollingPercentile.enabled     默认：true
#   该属性用来设置对命令执行的延迟是否适用百分位数来跟踪计算，如果设置为 false,那么所有的概要统计都降返回 -1
#
#   hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds    默认：60000
#   该属性用来设置百分位统计的滚动窗口的持续时间，单位为毫秒
#   注意：该属性从 Hystrix 1.4.12版本开始，只有在应用初始化的时候生效，通过动态刷新配置不会生效，
#         这样做是为了避免出现运行期监测数据丢失的情况
#
#   hystrix.command.default.metrics.rollingPercentile.numBuckets        默认：6
#   该属性用来设置百分位统计的滚动窗口中使用 桶 的数量
#   注意：metrics.rollingPercentile.timeInMilliseconds 参数设置的值必须被 metrics.rollingPercentile.numBuckets 整除，不然抛异常。
#   该参数跟 metrics.rollingStats.timeInMilliseconds 一样，从 Hystrix 1.4.12版本开始，只有在应用初始化的时候生效，通过动态刷新配置不会生效
#
#   hystrix.command.default.metrics.rollingPercentile.bucketSize      默认：100
#   该属性用来设置在执行过程中每个 桶 中保留的最大执行次数。如果在滚动时间窗内发生超过该设定值的执行次数，就从最初的位置开始重写。
#   例如，将该值设置为 100，滚动窗口为 10秒，若在10秒内一个 桶 发生了500次的执行，那么该 桶 只保留最后100次的执行统计。
#   另外，增加该值的大小将会增加内存的消耗，并增加排序百分位数所需要的计算时间
#   注意：该属性从 Hystrix 1.4.12版本开始，只有在应用初始化的时候生效，通过动态刷新配置不会生效，
#         这样做是为了避免出现运行期监测数据丢失的情况
#
#   hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds      默认：500
#   该属性用来采集影响断路器状态的健康快照（请求的成功，错误的百分比）的间隔等待时间
#
#
# 4.requestContext 配置, HystrixCommand 使用的 HystrixRequestContext 的设置
#
#   hystrix.command.default.requestCache.enabled        默认：true
#   该属性用来配置是否开启请求缓存
#
#   hystrix.command.default.requestLog.enabled          默认：true
#   该属性用来设置 HystrixCommand 的执行和事件是否打日记到 HystrixRequestLog 中
#
#
#
#
# collapser 属性主要用来处理请求合并相关的行为
#
#   hystrix.collapser.default.maxRequestsInBatch        默认：Integer.MAX_VALUE
#   该参数用来设置一次请求合并处理中允许的最大请求数
#
#   hystrix.collapser.default.timerDelayInMilliseconds      默认：10
#   该属性用来设置批处理过程中每个命令延迟的时间，单位为毫秒
#
#   hystrix.collapser.default.requestCace.enabled      默认：true
#   该属性用来设置批处理时是否开启请求缓存
#
#
#
# threadPool 属性主要用来设置执行命令线程池相关属性
#
#   hystrix.threadPool.default.coreSize           默认：10
#   该属性用来设置执行命令线程池的核心线程数，该值也是命令执行的最大并发量
#
#   hystrix.threadPool.default.maxQueueSize           默认：-1
#   该属性用来设置线程池的最大队列大小。当设置为 -1时，线程将使用 SynchronousQueue 实现的队列，否则将使用 LinkedBlockingQueue 实现的队列
#   注意：该值只有在初始化的时候才有用，无法通过动态刷新的方式调整
#
#   hystrix.threadPool.default.queueSizeRejectionThreshold           默认：6
#   该属性用来为队列设置拒绝阀值。通过该参数，即使队列没有达到最大值也能拒绝请求。
#   该参数主要是对 LinkedBlockingQueue 的补充，因为 LinkedBlockingQueue 不能动态的修改它的对象大小，而通过该属性就可以调整拒绝请求的队列大小
#   注意：当 maxQueueSize 为-1时，该属性不生效
#
#   hystrix.threadPool.default.metrics.rollingStats.timeInMilliseconds         默认：10000
#   该参数用来设置滚动时间窗的长度，单位为毫秒。该滚动时间窗的长度，用户指标线程池的度量，它会被分成多个 桶 来统计指标
#
#   hystrix.threadPool.default.metrics.rollingStats.numBuckets        默认：10
#   该参数用来设置滚动时间窗被划分成 桶 的数量
#   注意： metrics.rollingStats.timeInMilliseconds 设置的值必须能被 .metrics.rollingStats.numBuckets 整除，不然将抛出异常
#
#
#
#
#
#
#
