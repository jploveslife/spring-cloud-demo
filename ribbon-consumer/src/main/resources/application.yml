spring:
  application:
    name:  ribbon-consumer
  cloud:
    loadbalancer:
      retry:
        enabled: true

# spring.cloud.loadbalancer.retry.enabled 该参数用来开启重试机制，默认是关闭的


server:
  port : 7001

eureka:
  client:
    serviceUrl:
      defaultZone: http://peer1:9001/eureka/,http://peer2:9002/eureka/
  instance:
    #服务实例元数据，设置实例名，区分同一服务中不同实例的唯一标识
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
     #启用注册IP
    prefer-ip-address: true

hello-service:
  ribbon:
    ConnectTimeout: 2000      # 请求连接的超时时间
    ReadTimeout: 2000         #  请求处理的超时时间
    OkToRetryOnAllOperations: true    # 对所有请求都进行重试
    MaxAutoRetriesNextServer: 2       # 切换实例重试的次数，就是切换实例的次数
    MaxAutoRetries: 1                  # 对当前实例重试的次数，就是切换到这个实例，重试几次


management:
  endpoints:
    web:
      exposure:
        include: "*"
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

# hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds    断路器的时间需要大于 Ribbon的超时时间，不然不会触发重试
# 实际是会触发重试，但是断路器已经返回了，重试没也卵用